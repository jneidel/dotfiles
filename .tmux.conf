# tmux config
## options
### improve colors
set -g default-terminal screen-256color

### start numbering windows at 1 (to match up with ^a<n>)
set -g base-index 1

### vim mode
setw -g mode-keys vi
set -g status-keys vi

### window renaming
setw -g allow-rename on
set -g set-titles on
setw -g automatic-rename on

### fix vim focus events
# see: https://vi.stackexchange.com/a/13092
set -g focus-events on

### reduce latency switching modes in vim
set -s escape-time 0

### increase scrollback buffer
set -g history-limit 50000
# 'clear-history' to delete scrollback buffer

## bindings
### prefix (key to press before every other binding)
set -g prefix C-a # ^a

### movement between panes
bind h select-pane -L # ^a h
bind j select-pane -D # ^a j
bind k select-pane -U # ^a k
bind l select-pane -R # ^a l

### smart pane switching with awareness of vim splits
# see: https://github.com/christoomey/vim-tmux-navigator
# see: https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L" # ^h
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D" # ^j
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U" # ^k
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R" # ^l
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l" # ^\ - last pane

### movement between windows
bind C-a last-window  # ^a ^a

### kill window/pane
bind q confirm-before -p "Kill window #W? (y/n)" kill-window # ^a k
bind x confirm-before -p "Kill pane #P? (y/n)" kill-pane     # ^a x

### swap/move windows
bind s command-prompt -p "Swap window with:" "swap-window -t ':%%'" # ^a s
bind m command-prompt -p "Move window to:" "move-window -t ':%%'" # ^a m

### split pane
bind i split-window -h -c '#{pane_current_path}' # ^a i
bind - split-window -v -c '#{pane_current_path}' # ^a -
bind M-- split-window -v -p 20 -c '#{pane_current_path}' # ^a -

### resize pane
##set repeat-time 500
# time in which you can use another binding without using the prefix
# requires 'bind -r''
bind -r H resize-pane -L 2 # ^a H
bind -r J resize-pane -D 2 # ^a J
bind -r K resize-pane -U 2 # ^a K
bind -r L resize-pane -R 2 # ^a L

### swap panes
bind C-j swap-pane -D
bind C-k swap-pane -U

### copy-mode
unbind [
bind v copy-mode  # ^a v

unbind ]
bind V paste-buffer  # ^a V

### open man page
bind C-m command-prompt -p "Open man page for:" "new-window -n man 'exec colored-man %%'" # ^a ^m

### reload config
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..." # ^a R

### maximize current pane (repeat to return/toggle off)
bind f run ~/scripts/tmux/maximize-pane

### remap ^l (clear) to ^a ^l
bind C-l send-keys "C-l"

### unbind suspension
unbind C-z

### open session list
bind w choose-tree -Zs
# '('/')' to go to prev/next session

## styling
### status bar
# colors: green=#00ff5f, blue=#005fd7, grey=#1c1c1c, red=#d70000, yellow=#ffff00
set -g status-bg "#1c1c1c"
set -g status-fg "#1c1c1c"

set -g status-interval 15 # update interval

set -g status-left "#[fg=#d70000,bg=#1c1c1c]"
set -g status-left-length 20

set -g status-right "#[bg=#d70000,fg=#1c1c1c]#(~/scripts/tmux/status/bluetooth.sh)#[bg=#ffff00]#(~/scripts/tmux/status/transmission.sh)#(~/scripts/tmux/status/hosts.sh)#[fg=#d70000,bg=#1c1c1c]"
set -g status-right-length 40

### active windows
set -g window-status-current-format "#[fg=#1c1c1c,bg=#ffff00] #I #W "
set -g window-status-format "#[fg=#1c1c1c,bg=#005fd7] #I #W #[fg=#1c1c1c,bg=#005fd7]"
set -g window-status-separator "" # default is a space
set -g window-status-last-style fg=red,bold # last visited window

### pane divider
set -g pane-border-style fg="#6c6c6c"
set -g pane-active-border-style fg="#005fd7"

## layouts
### torrents
bind M-t new-window -n tsm -c ~/Downloads \; \
  send-keys "clear && tsmw" "Enter" \; \
  split-window -v -p 45 -c ~/Downloads \; \
  send-keys "clear && figlet Torrents" "Enter"

bind C-n new-window -n ncmpcpp "exec ncmpcpps" # ^a ^n

## tmux plugins
### resurrect - save/restore sessions (strg+s/strg+r)
run-shell ~/.tmux/resurrect/resurrect.tmux
