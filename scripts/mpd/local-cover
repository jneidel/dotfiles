#! /bin/sh

MPD_PORT=5555
MUSIC_LOCATION=/home/jneidel/ct/music # ffmpeg needs absolute path, not ~
COVER_LOCATION=/tmp/cover.jpg
FALLBACK_LOCATION=~/scripts/mpd/fallback-cover.jpg

startConky() {
  conky -c ~/.config/conky/mpd.conf 2> /dev/null
}
getConkyPid() {
  ps -t | grep " conky" | grep "mpd.conf" | cut -dp  -f1 | sed -e 's/^[[:space:]]*//' | sed -e 's/[[:space:]]*$//'
}
killConky() {
  kill $(getConkyPid) > /dev/null 2> /dev/null
}

killInactiveConky() {
  # kill conky after 3min of not playing anything
  while true; do
    [ "$(mpc -p $MPD_PORT status | grep "^\[" | cut -d] -f1 | cut -d\[ -f2)" != "playing" ] && {
      killConky
    }
    sleep 3m
  done &
}

cleanup() {
  ps | fgrep "local-cover" | awk '{ print $1 }' | xargs -r kill # kill all instances, pgrep does not catch all
  exit
}

logCover() {
  echo "  ❯ $@"
}

createCover() {
  while read i; do
    [ -z "$(getConkyPid)" ] && startConky # start conky if killed for not playing for 3min

    FILENAME="$(mpc-get file)"
    if echo "$FILENAME" | grep "volume.*repeat.*random.*single.*consume" >/dev/null; then # no file path (end of playlist reached w/o repeat)
      killConky
      continue
    fi

    FILE="$MUSIC_LOCATION/$FILENAME"
    echo "file: $FILENAME"

    if [ "$PREV_DIR" = "$(dirname "$FILE")" ]; then
      logCover Same cover
      continue
    else
      PREV_DIR=`dirname "$FILE"`
    fi

    if ffmpeg -i "$FILE" -y $COVER_LOCATION > /dev/null 2>&1; then
      logCover New cover
    else
      cp $FALLBACK_LOCATION $COVER_LOCATION
      logCover Fallback cover
    fi
  done
}

trap cleanup EXIT

# initialize
startConky
killInactiveConky
echo player | createCover

# watch for mpd player state changes
mpc -p $MPD_PORT idleloop "player" | createCover

