#! /bin/sh

DEFAULT_DEV=/dev/sdb
DEFAULT_LOCATION=/mnt

if [ "$1" = "--help" ] || [ "$1" = "help" ]; then
  echo "$ cryptmount"
  echo "Mount a luks encrypted external (hard)disk"
  echo ""
  echo "Parameters:"
  echo "  [\$1]: device source, as in '/dev/sd<x>'; default $DEV_SOURCE"
  echo "  [\$2]: mount location; default $DEFAULT_LOCATION"
  echo "  [\$3]: crypt mapper; 3 defaults defined"
  echo ""
  echo "Examples:"
  echo "$ cryptmount"
  echo "$ cryptmount d"
  echo "$ cryptmount c1 /media/hd"
  echo "$ cryptmount f /media/ext cryptcustom"
  exit
fi

DEV=$DEFAULT_DEV
if [ -z "$1" ]; then
  [ ! -e $DEV ] && {
    echo "Default device '$DEV' does not exist."
    echo "Insert it or pass a different one."
    exit 1
  }
else
  [ -e "/dev/sd$1" ] &&
    DEV="/dev/sd$1" || 
    {
      echo "Passed device '$1' does not exist."
      exit 1
    }
fi

LOCATION=$DEFAULT_LOCATION
if [ -z "$2" ]; then
  [ ! -d $LOCATION ] && {
    echo "Default location '$LOCATION' does not exist." 
    echo "Either create it or pass your own."
    exit 1
  }
else 
  if [ -d "$2" ]; then
    LOCATION="$2"
  else
    echo "Passed location '$2' does not exist."
    exit 1
  fi
fi

DEFAULT_MAPPER=cryptroot
if [ -n "$3" ]; then
  MAPPER=$3
elif [ -e /dev/mapper/$DEFAULT_MAPPER ]; then
  ALT_MAPPER=cryptext
  if [ -e /dev/mapper/$ALT_MAPPER ]; then
    FALLBACK_MAPPER=cryptfallback
    MAPPER=$FALLBACK_MAPPER
  else
    MAPPER=$ALT_MAPPER
  fi
else
  MAPPER=$DEFAULT_MAPPER
fi

# unlock luks
sudo cryptsetup open $DEV $MAPPER
[ $? -gt 0 ] && {
  echo "Wrong passphrase"
  exit 1
} || echo "Unlocked luks"

# mount root subvol
sudo mount -o compress=lzo,subvol=@ /dev/mapper/$MAPPER $LOCATION
echo "Mounted to $LOCATION"

# mount drive specific subvols
[ -e "$LOCATION/mount" ] && {
  echo "Running custom mount script"
  sh $LOCATION/mount
}

