#! /bin/bash

EMOJI_DIR=$XDG_DATA_HOME/emoji

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  cat <<EOF
$ emoji
Pick and insert emoji from the list.

Flags:
  -e: echo result instead of inserting it with xdotool

Auto-updates emoji list upon available updates.
EOF
  exit
fi

hash xdotool xargs jq curl wget rofi find i3-msg tmux || exit 127

SHOULD_INSERT_RESULT=1
[ "$1" = "-e" ] && SHOULD_INSERT_RESULT=0

get_installed_emoji_version() {
  find $EMOJI_DIR -name "*.txt" 2>/dev/null | sort -V | tail -n1 | rev | cut -d/ -f1 | cut -d. -f2- | rev
}

get_latest_emoji_version() {
  curl -s "https://registry.npmjs.org/emoji-datasource" | grep -Po '"version":"\K[0-9]+\.[0-9]+' | tail -n1
}

extract_emoji_from_json() {
  version=$1
  jq '.[] | {unified, short_name} | [values[]] | join(" ")' -r $EMOJI_DIR/$version.json \
    | grep -vFe"keycap_star" -e"hash" -e"zero" -e"one" -e"two" -e"three" -e"four" -e"five" -e"six" -e"seven" -e"eight" -e"nine" \
    | while read -a line; do
      emoji="$(echo -e "\U${line[0]}" | sed 's/-.*$//')"
      name=":${line[1]}:"
      echo $emoji $name
    done
}
update_emoji_data() {
  mkdir -p "$EMOJI_DIR"
  current="$1"
  version=$(get_latest_emoji_version)
  if [ "$latest" != "$current" ]; then
    wget -nc "https://raw.githubusercontent.com/iamcal/emoji-data/master/emoji_pretty.json" -O $EMOJI_DIR/$version.json --quiet
    extract_emoji_from_json $version >$EMOJI_DIR/$version.txt
  fi
}

is_on_blog() {
  if [ `i3-msg -t get_workspaces | jq ".[] | select(.focused == true) | .num"` = "1" ] \
    && tmux list-sessions | grep "(attached)" | grep -e web >/dev/null; then
      true
  else
    false
  fi
}

emoji_version=$(get_installed_emoji_version)
update_emoji_data $emoji_version &
if [ -z "$emoji_version" ]; then
  exit 1
fi

choice="$(tac $EMOJI_DIR/$emoji_version.txt | rofi rofi -dmenu -i -lines 15 -eh 1 -p emoji)"
if [ -n "$choice" ]; then
 if [ "$SHOULD_INSERT_RESULT" -eq 1 ]; then
    if is_on_blog; then
      echo -e $choice | cut -d\  -f2 |
        sed 's/y/z/g; s/:/Ã–/g; s/_/?/g' | # because I use a german keyboard layout
        xargs xdotool type --clearmodifiers # :name:
    else
      echo -e $choice | cut -d\  -f1 | xargs xdotool type # unicode symbol
    fi
 else
   echo -e "$choice" | cut -d\  -f1
 fi
fi
