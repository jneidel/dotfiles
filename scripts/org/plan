#! /bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$1" ]; then
  cat <<EOF
$ plan [FILENAME]
Create a new project plan at the given file,
with all the boilerplate and open it in vim.

Parameters:
  [\$1]: filename of the project plan, default: index.norg

Example:
  $ plan
  $ plan project-definition.norg
EOF
  exit
fi

template() {
  cat <<EOF
@document.meta
title: <++>
description: <++>
categories: [
  project
  <++>
]
authors: $(whoami)
created: $(date +%Y-%m-%d)
updated: $(date +%Y-%m-%d)
deadline: $(date +%Y)-<++>
@end

* Project definition
** Ist-Zustand
    > Wo stehst Du aktuell?

    <++>

** Soll-Zustand
    > Wo willst du hin, wenn Du es Dir bei der guten Fee wünschen dürftest?

    <++>

** Ziele (Goals)
    > Wo willst du durch diese Gesamtaktion hin? Orientierungsziele

    - <++>

** Zwecke (Purposes)
    > Warum willst du das? Genaue Erklärung der Goals, Unterziele

*** <++>

** Richtlinien
    > Wie soll das von statten gehen? Grundlegende Spielregeln und wichtige Pfeiler

    - <++>

** Pläne
    > Wie kann man den Ist-Zustand in Richtung Idealzustand bringen? Allgemein formulierte, schlaue Ideen

*** Dinge, die da sein müssen, um überhaupt arbeiten zu können
    - <++>

*** <++>

** Programme
    > Todos per Plan

EOF
}

command -v $EDITOR >/dev/null || { echo "$EDITOR is not installed or \$EDITOR var not set" 1>&2; exit 127; }

FILE="$1"
[ -z "$FILE" ] && FILE="index.norg"

template >>"$FILE"
$EDITOR "$FILE"
