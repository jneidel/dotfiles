#! /bin/sh

TEMP=$(mktemp)

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$1" ]; then
  cat << EOF
$ integrate-subs MOVIE SUBS
Integrate the subtitle file into the movie. Output to '$OUT'

Parameters:
  \$1: movie file
  \$2: .srt subs file

Example:
  $ integrate-subs One\ Cut\ of\ the\ Dead.mkv One\ Cut\ of\ the\ Dead.srt
EOF
  exit
fi

command -v ffmpeg >/dev/null || { echo "ffmpeg is not installed"; exit 127; }

MV="$1"
SUB="$2"
if [ -z "$SUB" ]; then
  SUB="${MV%.*}.srt"
  [ ! -e "$SUB" ] && {
    echo sub file with identical name does not exist
    exit 1
  }
elif [ "${SUB##*.}" != "srt" ]; then
  echo subs file does not have the .srt file extension
  exit 1
fi

FILE_EXT="${MV##*.}"
OUT="$TEMP.$FILE_EXT"

convert() {
  case "$FILE_EXT" in
    mkv) ffmpeg -i "$MV" -sub_charenc 'UTF-8' -f srt -i "$SUB" -map 0 -map 1:0 -c:v copy -c:a copy -c:s srt "$OUT";
      return $?;;
    mp4) ffmpeg -i "$MV" -i "$SUB" -c copy -c:s mov_text "$OUT";
      return $?;;
    avi)
      OUT="$TEMP.mp4";
      ffmpeg -i "$MV" -i "$SUB" -c copy -c:s mov_text "$OUT";
      return $?;;
    *) echo Invalid format: $FILE_EXT
      exit 1;;
  esac
}

# multiple sub files:
# ffmpeg -i test.mp4 -i Love.Actually.2003.1080p.BluRay.x264.YIFY_SDH.srt -i Tatsaechlich.Liebe.2003.TL.1080p.x264_ger2.srt -map 0:v -map 0:a -map 1 -map 2 -c:v copy -c:a copy -c:s srt -metadata:s:s:0 language=eng -metadata:s:s:1 language=ger out2.mkv

nice convert && {
  rm "$SUB"
  mv "$OUT" "$MV"
}
