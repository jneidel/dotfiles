#! /bin/sh

. $HOME/scripts/personal/hypothesis-env.sh # includes:
# API_TOKEN
# GROUP_ID

# How to setup for yourself:
# - create group in hypothes.is
# - change to group in the browser extension
# - get the group_id via an authenticated GET /groups
# - set API_TOKEN and GROUP_ID

INBOX=$HOME/org/0_inbox
CACHE_DIR=$XDG_DATA_HOME/hypothesis
mkdir -p $CACHE_DIR
TMP=/tmp/hypothesis-cache
LOG=$CACHE_DIR/delete.log

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  cat <<EOF
$ fetch-annotations
Fetch annotations from hypothesis
EOF
  exit
fi

command -v curl >/dev/null || { echo "curl is not installed" 1>&2; exit 127; }
command -v jq >/dev/null || { echo "jq is not installed" 1>&2; exit 127; }
command -v gron >/dev/null || { echo "gron is not installed" 1>&2; exit 127; }

CACHE_FILE=$CACHE_DIR/cached-annotations-$(date +%s).json

# api docs: https://h.readthedocs.io/en/latest/api-reference
fetch() {
  curl -Ss -H "Authorization: Bearer $API_TOKEN" "https://hypothes.is/api/search?group=$GROUP_ID" | jq .rows >$CACHE_FILE
}
delete_fetched() {
  for id in $(jq 'map(.id)' $CACHE_FILE | gron | tail -n +2 | cut -d\" -f2); do
    curl -Ss -H "Authorization: Bearer $API_TOKEN" "https://hypothes.is/api/annotations/$id" -X DELETE >>$LOG
    printf "\n"
  done
}
extract_annotations() {
  jq 'map({ uri: .uri, annotation: .text, selection: .target[0].selector[2].exact })' $CACHE_FILE >$TMP
  for i in `seq 0 $(jq length-1 $TMP)`; do
    local uri=`jq -r ".[$i].uri" $TMP`
    local annotation=`jq -r ".[$i].annotation" $TMP`
    local selection=`jq -r ".[$i].selection" $TMP`

    cat <<EOF >$INBOX/webclipping-$(date +%s)-$i.md
{$uri}[$selection]

$uri
$selection

$annotation
EOF
  done
}

~/scripts/cron/waitforinternet
~/scripts/cron/cron-notify-send "Fetching annotations"
fetch >/dev/null 2>&1
delete_fetched >/dev/null 2>&1
extract_annotations >/dev/null 2>&1
