#! /bin/sh

COMIC_DIR=~/comics
YAC_DB_FILE=$COMIC_DIR/.yacreaderlibrary/library.ydb
UPDATES=$COMIC_DIR/updates

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  printf "$ comicsync
Remove comics from updates list (created with getcomics-update) if
they are marked as read in in YACReader.
"
  exit
fi

command -v sqlite3 >/dev/null || { echo "sqlite3 is not installed"; exit 1; }
[ ! -e "$UPDATES" ] && {
  echo "updates file ('$UPDATES') does not exist"
  exit 1
}
[ ! -e "$YAC_DB_FILE" ] && {
  echo "yacreader library file ('$YAC_DB_FILE') does not exist"
  exit 1
}

DUMP=$(mktemp)
sqlite3 $YAC_DB_FILE .dump > $DUMP

cat "$UPDATES" | tr "[A-Z]" "[a-z]" | sed "s|[[:space:]]$||; s|–|-|" | tr " " - | while read LINE; do
  NAME=$(echo $LINE | cut -d# -f1 | sed 's|-$||')
  ISSUE=$(echo $LINE | cut -d# -f2)

  INFO_ID=$(grep "$NAME-0*$ISSUE" $DUMP | awk -F , '{ print $3 }')
  if [ -z "$INFO_ID" ]; then
    >&2 echo "No INFO_ID for $NAME at issue $ISSUE"
    continue
  fi

  READ=$(grep -P "comic_info.*?$INFO_ID," $DUMP | awk -F , '{ print $30 }') # 0/1

  # to find out more about the structure:
  #   sqlite3 <yacreader-db-file>
  #     .tables
  #     .schema comic
  #     .schema comic_info 

  if echo "$READ" | fgrep "BOOLEAN" > /dev/null; then
    break # weird error where the wrong value is greped
  fi

  [ "$READ" -gt 0 ] && {
    NAME="$(echo $NAME | tr - ' ' | sed 's|–|-|')"
    sed -i "/$NAME #$ISSUE/Id" $UPDATES
    echo "Removed $NAME #$ISSUE from updates"
  } || true
done

