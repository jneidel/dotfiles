#! /bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ -z "$1" ]; then
  cat <<EOF
$ co BRANCH_NAME|SEARCH_QUERY
git checkout a branch, via full name or search query

Parameters:
  \$1: either
    - full name of a branch
    - search phrase, which applies the first sole match
  \$2: pass '-1' for the search phrase to apply the first result

Examples:
  $ co main
  #=> checks out 'main'

  $ git branch
  #=>
    pager
    new-homepage
  $ co age
  #=>
    Multiple matches: narrow down your query
    new-homepage
    pager
  $ co age -1
  #=> checks out 'new-homepage'
  $ co ager
  #=> checks out 'pager'
EOF
  return 0
fi

command -v git >/dev/null || { echo "git is not installed" 1>&2; exit 127; }

branch_name=$1
TMP=$(mktemp)

if ! git checkout $branch_name 2>$TMP && /bin/cat $TMP | fgrep "did not match any file(s) known to git" >/dev/null; then
  search_phrase=$branch_name
  if git branch | grep $search_phrase >$TMP; then
    if [ `wc -l $TMP | awk '{ print $1 }'` -gt 1 ]; then
      if [ "$2" = "-1" ]; then
        git checkout `head -n1 $TMP`
      else
        echo "Multiple matches: narrow down your query"
        /bin/cat $TMP
      fi
    else
      echo "Found match!"
      git checkout `<$TMP`
    fi
  else
    echo "No match for: $search_phrase"
    git --no-pager branch
    return 1
  fi
else
  /bin/cat $TMP
fi
