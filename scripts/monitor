#! /bin/sh

command -v xrandr >/dev/null || { echo "xrandr is not installed"; exit 1; }

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  printf "$ monitor [on|off] [-m]
Toggle the connected display $MONITOR as a second monitor.

Parameters:
  [\$1]: on|off - turn display on/off

Flags:
  -m: mirror instead of adding as 2nd monitor 

Example:
  $ monitor off
  $ monitor -m
"; exit
fi

case `cat /etc/hostname` in
  jneidel-x240)
    MAIN_RESOLUTION=1366x768
    ;;
  jneidel-e495)
    MAIN_RESOLUTION=1920x1080
    MAIN=eDP-1
    ;;
  *)
    echo "Device is not configured in script, using xrandr output instead.";;
esac

# [ -z "$MAIN" ] && MAIN=`xrandr --listmonitors | pcregrep -o1 "\+\*(\w+\d*)"`
[ -z "$MAIN" ] && MAIN=$(xrandr | grep primary | cut -d\  -f1)
[ -z "$MAIN_RESOLUTION" ] && MAIN_RESOLUTION=$(xrandr | grep primary | cut -d\  -f4 | awk -F+ '{ print $1 }')

# first connected monitor (apart from MAIN) it can find
MONITOR=$(xrandr | grep " connected" | grep -v "$MAIN" | head -n1 | cut -d\  -f1)
MONITOR_RESOLUTION=1920x1080
[ -z "$MONITOR_RESOLUTION" ] && MONITOR_RESOLUTION=$(xrandr | grep $MONITOR | cut -d\  -f3 | awk -F+ '{ print $1 }')

printf "Using:
  Main    : $MAIN - $MAIN_RESOLUTION
  External: $MONITOR - $MONITOR_RESOLUTION
\n"


IS_MIRROR=0
while getopts "m" OPTION; do
  case $OPTION in
  m)
    IS_MIRROR=1
  ;;
  esac
done

turn_off() {
  xrandr --output $MONITOR --off
  echo "Turned external monitor off"
}

add_monitor() {
  xrandr --output $MONITOR --mode $MONITOR_RESOLUTION --right-of $MAIN --scale-from $MAIN_RESOLUTION >/dev/null
}
mirror() {
  echo "mirroring"
  xrandr --output $MONITOR --mode $MONITOR_RESOLUTION --scale-from $MAIN_RESOLUTION --same-as $MAIN >/dev/null
}

turn_on() {
  if [ "$IS_MIRROR" -gt 0 ]; then
    mirror || exit 1
  else
    add_monitor || exit 1
  fi

  echo "Turned external monitor on"
}

if xrandr --listactivemonitors | grep " $MONITOR" >/dev/null; then
  [ ! "$1" = "on" ] && turn_off
else
  [ ! "$1" = "off" ] && turn_on
fi

true
