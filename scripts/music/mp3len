#! /bin/bash

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$1" ] || [ ! -e "$1" ]; then
  cat <<EOF
$ mp3len MP3s|DIRECTORY
Print the length of (multiple) mp3 files

Parameters:
  \$1: mp3 files or a directory containing them

Example:
  $ mp3len *.mp3
  $ mp3len KRS-One
EOF
  exit
fi

command -v ffmpeg >/dev/null || { echo "ffmpeg is not installed" 1>&2; exit 127; }

get_len() {
  if echo "$1" | grep "\.mp3" >/dev/null; then
    ffmpeg -i "$1" 2>&1 | grep Duration | cut -d. -f1 | cut -d\  -f4
  else
    echo 0:0:0
  fi
}

TOTAL_H=0
TOTAL_M=0
TOTAL_S=0
add_to_total() {
  ADDER_H=$(echo "$1" | cut -d: -f1)
  ADDER_M=$(echo "$1" | cut -d: -f2 | sed "s|0||")
  ADDER_S=$(echo "$1" | cut -d: -f3 | sed "s|0||")
  # sed, otherwise base 8 error possible: (0+08: value too great for base (error token is "08")

  MOD_M=$((($TOTAL_M+$ADDER_M)%60))
  MOD_S=$((($TOTAL_S+$ADDER_S)%60))

  REST_M=$((($TOTAL_M+$ADDER_M)/60))
  REST_S=$((($TOTAL_S+$ADDER_S)/60))

  TOTAL_S=$MOD_S

  TOTAL_M=$(($MOD_M+$REST_S))
  if [ "$TOTAL_M" -gt 60 ]; then
    _MOD_M=$((($TOTAL_M)%60))
    _REST_M=$((($TOTAL_M)/60))

    TOTAL_M=$_MOD_M
    TOTAL_H=$(($TOTAL_H+$_REST_M))
  fi

  TOTAL_H=$(($TOTAL_H+$ADDER_H+$REST_M))
}

if [ -d "$1" ]; then
  while read i; do
    add_to_total $(get_len "$i")
  done <<<$(find "$1" -name '*.mp3')
else
  for i in "$@"; do
    add_to_total $(get_len "$i")
  done
fi

printf "%02d:%02d:%02d\n" "$TOTAL_H" "$TOTAL_M" "$TOTAL_S"
