#! /bin/sh

DIR=`dirname $0`
CODE_DIR="$HOME/code"
CODE_TMUXINATOR_FILE=".tmuxinator.yml"

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  cat <<EOF
$ tp PROJECT
Start a tmux(inator) project.

Add a new one with: mktmuxinator

Parameters:
  \$1: name of the project to be started

Commands:
  print_completions: print list of available projects

Examples:
  $ tp
  $ tp main
  $ tp print_completions
EOF
  exit
fi

command -v tmuxinator >/dev/null || { echo "tmuxinator is not installed" 1>&2; exit 127; }

PROJECT=$1
[ -z "$1" ] && PROJECT=main

print_completions() {
  cat <<EOF
$(fd -t f -e yml --glob "*.yml" $DIR/tmuxinator | rev | cut -d. -f2 | cut -d/ -f1 | rev)
$(fd -H -t f -e yml "$CODE_TMUXINATOR_FILE" $CODE_DIR | rev | cut -d/ -f2 | rev)
EOF
}
if [ "$PROJECT" = "print_completions" ]; then
  print_completions
  exit 0
fi
if ! print_completions | grep "$PROJECT" >/dev/null; then
  echo "Invalid project chosen. Must be one of:\n"
  print_completions
  exit 1
fi

is_inside_tmux() {
  if [ "$TMUX_PANE" = "%0" ]; then
    false
  else
    true
  fi
}
if tmux list-sessions 2>/dev/null | cut -d: -f1 | grep "^$PROJECT$" >/dev/null; then
  if is_inside_tmux; then
    tmux switch-client -t "$PROJECT"
  else
    tmux -u attach -t "$PROJECT"
  fi
  exit 0
fi

is_config() {
  if [ -f "$DIR/tmuxinator/$PROJECT.yml" ]; then
    true
  else
    false
  fi
}
run_config() {
  tmuxinator start $PROJECT -p $DIR/tmuxinator/$PROJECT.yml
}
run_code_project() {
  tmuxinator start $PROJECT -p "$CODE_DIR/$PROJECT/$CODE_TMUXINATOR_FILE"
}

is_config && run_config
run_code_project
