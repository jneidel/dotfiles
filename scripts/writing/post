#! /bin/sh

cd $WEB_HOME || exit 1

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$1" ]; then
  cat <<EOF
$ post [CATEGORY] POST_NAME LANGUAGE
Create a new blog post in hugo.

Parameters:
  [\$1]: the category for the post go in
  \$2: the name of the post (no spaces)
  \$3: language, one of: "-", "en", "de"

Examples:
  $ post misc a-new-post -
  #=> creates: content/misc/a-new-post/index.md
  #            content/misc/a-new-post/index.de.md

  $ post post-in-root en
  #=> creates: content/post-in-root/index.md

  $ post misc/nested going-deep de
  #=> creates: content/misc/nested/going-deep/index.de.md
EOF
  exit
fi

command -v hugo >/dev/null || { echo "hugo is not installed" 1>&2; exit 127; }

category=
post_name=
lang=

if [ "$1" = "newsletter" ]; then
  category=$1/
  lang=en
elif [ -n "$3" ]; then
  category=$1/
  post_name=$2
  lang=$3
elif [ -n "$2" ]; then
  post_name=$1
  lang=$2
fi

test_lang() {
  case $lang in
    -|en|de)
      true
      break;;
    *)
      echo "Missing or invalid LANGUAGE parameter. Try: -, en, de"
      exit 1
  esac
}
test_lang

calc_next_nr_of_next_newsletter() {
  last_nr="$(find $WEB_HOME/content/newsletter -maxdepth 1 -mindepth 1 -type d | grep -v 2023 | sort -V | tail -n1 | rev | cut -d/ -f1 | rev | cut -d- -f1)"
  echo $(($last_nr +1))
}

en_extra=
de_extra=
apply_category_specific_rules() {
  case "$category" in
    newsletter/)
      post_name="$(calc_next_nr_of_next_newsletter)" # dir name is only the number
      de_extra="-k newsletter-de"
      lang="en"
      break;;
    review/)
      de_extra="-k review-de"
  esac
}

create_based_on_language_argument() {
  case $lang in
    -)
      hugo new $en_extra "content/${category}${post_name}/index.md"
      hugo new $de_extra "content/${category}${post_name}/index.de.md"
      break;;
    en)
      hugo new $en_extra "content/${category}${post_name}/index.md"
      break;;
    de)
      hugo new $de_extra "content/${category}${post_name}/index.$lang.md"
      break;;
  esac
}

apply_category_specific_rules
create_based_on_language_argument
