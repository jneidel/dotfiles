#! /bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$2" ]; then
  cat <<EOF
$ curlj METHOD URL DATA
curlj[son]
Send a curl request with json data

Parameters:
  \$1: http method, uppercase
  \$2: url
  [\$3]: data, valid json/javascript object

Flags:
  -e: echo mode, print the resulting command

Examples:
  $ curlj PUT "http://localhost:8092/key" '{"data":"ok"}'
  $ curlj PUT "http://localhost:8092/key" "{data:'ok'}"
  $ curlj -e PUT "http://localhost:8092/key" '{"data":"ok"}'
  $ curlj GET "http://localhost:8092/key"
EOF
  exit
fi

command -v curl >/dev/null || { echo "curl is not installed" 1>&2; exit 127; }
command -v jq >/dev/null || { echo "jq is not installed" 1>&2; exit 127; }
command -v node >/dev/null || { echo "node is not installed" 1>&2; exit 127; }

ECHO_MODE=0
if [ "$1" = "-e" ]; then
  ECHO_MODE=1
  shift
fi

METHOD=$1
URL="$2"
DATA=
if [ -n "$3" ]; then
  DATA=`node -e 'console.log(JSON.stringify(eval("("+process.argv[1]+")")))' "$3" 2>/tmp/curlj_err`

  if [ "$?" -gt 0 ]; then
    echo "Error while parsing json:\n$(cat /tmp/curlj_err | head -n3 | tail -n2)"
    exit 1
  fi
fi

if [ "$METHOD" = "GET" ]; then
  if [ "$ECHO_MODE" -eq 1 ]; then
    echo "curl -Ss \"$URL\""
  else
    curl -Ss "$URL" | jq
  fi
else
  if [ "$ECHO_MODE" -eq 1 ]; then
    echo "curl -Ss -X $METHOD \"$URL\" -d '$DATA' -H \"Content-Type: application/json\""
  else
    curl -Ss -X $METHOD "$URL" -d "$DATA" -H "Content-Type: application/json" | jq
  fi
fi
