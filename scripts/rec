#! /bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  cat << EOF
$ rec [OUTPUT]
Record the screen

Fix what audio is being recorded in pavucontrol

Parameters:
  [\$1]: Name of the output file (automatic .mkv)
    defaults to: recording_$(date +%Y-%b-%d_%H_%M_%S)

Flags:
  -60: recording in 60 fps (instead of 20)

Example:
  $ rec
  $ rec out
EOF
  exit
fi

FPS=20
OUTPUT="recording_$(date +%Y-%b-%d_%H_%M_%S).mkv"
if [ "$1" = "-60" ]; then
  FPS=60
elif [ -n "$1" ]; then
  OUTPUT="$1.mkv"
fi

command -v ffmpeg >/dev/null || { echo "ffmpeg is not installed"; exit 1; }
command -v xdpyinfo >/dev/null || { echo "xdpyinfo is not installed"; exit 1; }

test_audio() {
  # play sound and check on stream if sound is being played
  timeout 3 mpv --no-audio-display --no-video ~/scripts/personal/audio.mp3 >/dev/null 2>&1
  sleep 7 && timeout 3 mpv --profile=overlay "$OUTPUT" >/dev/null 2>&1
}
# test_audio &

circumvent_lockscreen() {
  echo "Killing xautolock"
  kill $(pidof xautolock)

  cleanup() {
    echo "Starting xautolock"
    ~/scripts/i3/lock/autostart-lock
  }
  trap cleanup EXIT
}
circumvent_lockscreen

# -s size (dimension)
# -f format (X) -i input (X display)
# -f format (alsa) -i input (pulse/default)
# -r framerate
# -threads run multi threaded
# -vcodec video codec
# -preset
#   fast ~30%
#   ultrafast ~20% cpu

ffmpeg -s $(xdpyinfo | grep dimensions | awk '{ print $2 }') \
  -use_wallclock_as_timestamps true \
  -f x11grab -i :0.0 \
  -f alsa -i pulse \
  -r $FPS \
  -threads 0 \
  -vcodec libx264 \
  -preset fast \
  "$OUTPUT"

# -acodec pcm_s16le
# -crf 0 - 25 # quality?

# adapt quality/size options
## https://ubuntuforums.org/showthread.php?p=8746719#post8746719

# change the recording device in pavucontrol
##  https://askubuntu.com/questions/682144/capturing-only-desktop-audio-with-ffmpeg
