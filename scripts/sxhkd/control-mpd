#! /bin/sh

# refactor mpd stuff into separate mpdctl?
# rename to control media?

TMP=/tmp/control-mpd-tmp

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  printf "$ control-mpd COMMAND
Send commands to mpd and send a notification on it.
For usage via keyboard shortcuts (sxhkd).

Commands:
  toggle: pause/play music/mpv
  pause: pause playback
  play: start playing music
  next: next track
  prev: previous track

Example:
  $ control-mpd toggle
"
  exit
fi

command -v mpcc >/dev/null || { echo "mpcc script is not in PATH"; exit 1; }

run_cmd() {
  CMD="$1"

  mpcc $CMD -f 'TRACK:%title% - %artist%\nFILE:%file%' >$TMP

  TRACK="$(grep -Po '^TRACK:\K.*' $TMP)"
  [ "$TRACK" = " - " ] && {
    TRACK="$(basename "$(grep -Po '^FILE:\K.*' $TMP)" | rev | cut -d. -f2 | rev)"
  }

  case "$CMD" in
    toggle)
      # echo $TMP
      if grep "playing" $TMP >/dev/null; then
        ICON=player_play
        HEAD=Play
      else
        ICON=player_pause
        HEAD=Pause
      fi;;
    play)
      ICON=player_play
      HEAD=Play;;
    pause)
      ICON=player_pause
      HEAD=Pause;;
    next)
      ICON=player_end
      HEAD=Next;;
    prev)
      ICON=player_start
      HEAD=Previous;;
    *)
      HEAD=""
  esac

  [ -n "$HEAD" ] && notify-send -i $ICON -h string:x-canonical-private-synchronous:controlMpd -u normal -t 7000 "$HEAD" "$TRACK"
}

if ~/scripts/mpd/is-mpd-server; then
  case $1 in
    toggle) mpvctl --socket /tmp/mpv_named_music toggle;;
    next) mpvctl --socket /tmp/mpv_named_music next;;
    pause) mpvctl --socket /tmp/mpv_named_music pause;;
    play) mpvctl --socket /tmp/mpv_named_music play;;
    *) echo "Please pass either 'toggle', 'pause', 'play', 'next' or 'prev'";;
  esac
else
  IS_MPV=0
  MPV_PAUSE="$(mpvctl get pause 2>/dev/null)"
  if [ "$?" -eq 0 ] && [ "$MPV_PAUSE" = "false" ]; then
    IS_MPV=1
  else
    if mpvctl get path 2>/dev/null | grep -ie "youtube.com" -e "podcasts" >/dev/null; then
      IS_MPV=1
    fi
  fi

  case $1 in
    toggle)
      if [ "$IS_MPV" -eq 1 ]; then
        mpvctl toggle
            else
        run_cmd toggle
      fi;;
    next)
      if [ "$IS_MPV" -eq 1 ]; then
        mpvctl next
      else
        run_cmd next
      fi;;
    prev)
      if [ "$IS_MPV" -eq 1 ]; then
        mpvctl prev
      else
        run_cmd prev
      fi;;
    pause)
      if [ "$IS_MPV" -eq 1 ]; then
        mpvctl toggle
      else
        run_cmd pause
      fi;;
    play) run_cmd play;;
    *) echo "Please pass either 'toggle', 'pause', 'play', 'next' or 'prev'";;
  esac
fi
