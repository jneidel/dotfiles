#! /bin/bash

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  cat << EOF
$ mimetype FILE
Classify file type and return a file extension

Parameters:
  \$1: name of the file

Example:
  $ mimetype mime
  #=> sh
  $ mimetype song.mp3
  #=> mp3
EOF
  exit
fi

FILE="$(readlink -f "$1")"

classify_file() {
  basename="$1"

  case $(basename "$basename") in
    tabs|links)
      echo browser-tabs
      exit 0;;
    tmux.yml)
      echo tmux-project
      exit 0;;
  esac

  fileext=

  arrayOfSupportedExtendedExtensions=(bz2 gz gpg part) # like tar.bz2; tar.gz; mkv.gpg; pdf.part
  if printf '%s\0' "${arrayOfSupportedSecondExtensions[@]}" | grep -F -x -z -- "${basename##*.}" >/dev/null; then
    # contains, source: https://stackoverflow.com/a/47541882

    # get first extension
    fileext="${basename##*.}"
    basename=${basename%.*}

    # get second extension
    fileext="${basename##*.}.$fileext"
    basename=${basename%.*}
  else
    fileext=${basename##*.}
    basename=${basename%.*}
  fi
  fileext="$(echo $fileext | tr '[:upper:]' '[:lower:]')" # to lowercase

  if [ -z "$fileext" ] || echo "$fileext" | grep " " >/dev/null; then
    FILE_OUTPUT="$(file -b "$1" | cut -d, -f1)"
    if grep -F "cannot open" <<< $FILE_OUTPUT >/dev/null; then
      echo "[ERR] file does not exist: $FILE"
      exit 2
    fi

    case "$FILE_OUTPUT" in
      "POSIX shell script") echo sh;;
      "Bourne-Again shell script") echo bash;;
      "UTF-8 Unicode text"|"Unicode text"|"ASCII text"|"JSON data"|"JSON text data") echo txt;;
      "empty") echo txt;;
      *) echo [ERR] mimetype not configured: $FILE_OUTPUT
        echo "unconfigured mimetype: $FILE_OUTPUT" >$ORG_INBOX/mimetype-$(date +%s)
        exit 1;;
    esac
  else
    echo $fileext
  fi
}

classify_file "$FILE"
