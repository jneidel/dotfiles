#! /bin/bash

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ]; then
  cat << EOF
$ mimetype FILE
Classify file type and return a file extension

Parameters:
  \$1: name of the file

Example:
  $ mimetype mime
  #=> sh
  $ mimetype song.mp3
  #=> mp3
EOF
  exit
fi

FILE="$(readlink -f "$1")"

classify_file() {
  basename="$1"

  case $(basename "$basename") in
    tabs|links)
      echo browser-tabs
      exit 0;;
    tmux.yml)
      echo tmux-project
      exit 0;;
  esac

  fileext=
  while [[ "$basename" = ?*.@(bz2|gz|gpg|part) ]]; do
    fileext=${basename##*.}.$fileext
    basename=${basename%.*}
  done
  if [[ "$basename" = ?*.* ]]; then
    fileext=${basename##*.}.$fileext
    basename=${basename%.*}
  fi
  fileext=${fileext%.}

  if [ -z "$fileext" ] || echo "$fileext" | grep " " >/dev/null; then
    FILE_OUTPUT="$(file -b "$1" | cut -d, -f1)"
    if grep -F "cannot open" <<< $FILE_OUTPUT >/dev/null; then
      echo "[ERR] file does not exist: $FILE"
      exit 2
    fi

    case "$FILE_OUTPUT" in
      "POSIX shell script") echo sh;;
      "Bourne-Again shell script") echo bash;;
      "UTF-8 Unicode text"|"Unicode text"|"ASCII text"|"JSON data") echo txt;;
      "empty") echo txt;;
      *) echo [ERR] mimetype not configured: $FILE_OUTPUT
        exit 1;;
    esac
  else
    echo $fileext
  fi
}

classify_file "$FILE"
