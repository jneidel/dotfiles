#! /bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ "$1" = "help" ] || [ -z "$1" ]; then
  cat << EOF
$ mimeopen EXTENSION
Return the open handler for the given extension

Parameters:
  \$1: file extension to get the handler for

Example:
  $ mimeopen mkv
  #=> mpv --fs
EOF
  exit
fi

[ -e "$1" ] && { echo "Don't pass in file, file extensions only" ; exit 12 ; }
EXT="$1"

e404() {
  printf "ERR: corresponding handler not installed.\nPlease install: $1\n"
  exit 11
}

# exit 1 means the handler does not like to be run in the background (&)
case $EXT in
  txt|md|java|yml|yaml|json|norg|rem|js|ts) echo "$EDITOR"; exit 1;;
  png|jpg|jpeg|gif|webp|svg) echo nsxiv -b;;
  pdf) echo zathura;;
  sh) echo sh; exit 1;;
  bash) echo bash; exit 1;;
  sent) echo sent;;
  mp4|mkv|avi|m4v|webm|mpg|mp4.part|vob) echo "tsp mpv --fs >/dev/null 2>&1";;
  tex) echo pdflatex; exit 1;;
  epub) if command -v epr >/dev/null; then
      echo "epr 2>/dev/null"; exit 1
    elif command -v FBReader >/dev/null; then
      echo FBReader
    else
      e404 'epr or FBReader'
    fi;;
  sc)
    if command -v sc-im >/dev/null; then
      echo sc-im; exit 1
    else
      e404 'sc-im'
    fi;;
  mp3|flac|ogg|wma|m4b|m4a|wav|aac|opus) echo "mpv --profile=music"; exit 1;;
  cbz|cbr) echo "YACReader >/dev/null 2>&1";;
  tgz|zip|rar|xz|gz|tar.gz|deb) echo extract; exit 1;;
  tgz.gpg) echo untargpg; exit 1;;
  html) echo "$BROWSER >/dev/null 2>&1";;
  exe) echo "wine >/dev/null 2>&1";;
  aup3) echo audacity;;
  gpg|*.gpg) echo extracthere; exit 1;;
  ods|xlsx|csv) echo libreoffice;;
  docx|pptx|odp|odt|xltx) echo "libreoffice --convert-to pdf"; exit 1;;
  c) echo gcc; exit 1;;
  py) echo python3; exit 1;;
  browser-tabs) echo open-tabs;;
  tmux-project) echo open-tmux-project; exit 1;;
  org) echo emacsclient -t; exit 1;;
  *) printf "ERR: no handler setup for: $EXT\n"
    exit 10;;
esac
exit 0 # explicit 0 exit for handlers fine to run in the background
