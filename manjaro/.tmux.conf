set-option -g prefix C-a # ^a as prefix

# Vim mode
setw -g mode-keys vi
set-window-option -g mode-keys vi
set -g status-keys vi

# Kill window/pane
bind q confirm-before -p "Kill window #W? (y/n)" kill-window # ^a k
bind x confirm-before -p "Kill pane #P? (y/n)" kill-pane     # ^a x

# Movement
bind C-a last-window # ^a ^a
bind k select-pane -U # ^a k
bind l select-pane -R # ^a l
bind j select-pane -D # ^a j
bind h select-pane -L # ^a h

bind s command-prompt -p "Swap window with:" "swap-window -t ':%%'"
bind m command-prompt -p "Move window to:" "move-window -t ':%%'"

# Create pane in current path
bind C-p split-window -v -c '#{pane_current_path}' # a^ p^
bind C-l split-window -h -c '#{pane_current_path}' # a^ l^
## copy pane-split and add -f flag to split on whole width/height
## bind-key | split-window -fh -c "#{pane_current_path}"

# Resizing
bind H resize-pane -L 5 # ^a H
bind J resize-pane -D 5 # ^a J
bind K resize-pane -U 5 # ^a K
bind L resize-pane -R 5 # ^a L

# Status line
# colors: green=#00ff5f, blue=#005fd7, grey=#1c1c1c, purple=#cf004b, yellow=#ffff00
set -g status-bg "#1c1c1c"
set -g status-fg "#1c1c1c"

set -g status-interval 3

set -g status-left "#[fg=#cf004b,bg=#1c1c1c]#[bg=#cf004b,fg=#1c1c1c] #S #[fg=#cf004b,bg=#1c1c1c]"
set -g status-left-length 20 # main is 11

set -g status-right "#[bg=#cf004b,fg=#1c1c1c]#(~/scripts/personal/get-github-notifications)#(~/scripts/status/tsp-active)#(~/scripts/status/bluetooth)#[bg=#ffff00]#(~/scripts/status/hosts-status)#[fg=#cf004b,bg=#1c1c1c]"
set -g status-right-length 80

## Active windows
set -g window-status-current-format "#[fg=#1c1c1c,bg=#ffff00] #I #W "
set -g window-status-format "#[fg=#1c1c1c,bg=#005fd7] #I #W #[fg=#1c1c1c,bg=#005fd7]"
set -g window-status-separator "" # default is a space
set -g window-status-last-style fg=red,bold # last visited window

# Misc
bind v copy-mode  # ^a v
bind V paste-buffer  # ^a V
set -s escape-time 50 # Reduce latency switching modes in vim
set -g base-index 1   # Start numbering windows at 1
set -g default-terminal screen-256color
bind C-m command-prompt -p "Open man page for:" "new-window 'exec colored-man %%'"

# Testing
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..." # a^ R

# Window Renaming
set-window-option -g allow-rename on # Allow programms changing window names
set -g set-titles on
setw -g automatic-rename on
# bind-key + , # a^ , to change window name

# Maximize current pane
bind f run ~/scripts/tmux/maximize-pane

# Layouts
## Torrents
bind M-t new-window -n tsm -c ~/Downloads \; \
  send-keys "clear && tsmw" "Enter" \; \
  split-window -v -p 45 -c ~/Downloads \; \
  send-keys "clear && figlet Torrents" "Enter"

# Smart pane switching with awareness of vim splits
# Source: https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"

# Fix vim focus events, src: https://vi.stackexchange.com/a/13092
set -g focus-events on

# 'clear-history' to delete scrollback buffer
