### ncmpcpp config

ncmpcpp_directory = ~/.config/ncmpcpp

### mpd settings
# mpd_host = localhost
mpd_port = 5555
mpd_connection_timeout = 5

mpd_music_dir = "~/music"
#mpd_crossfade_time = 5
data_fetching_delay = yes

### ncmpcpp

header_visibility = no
statusbar_visibility = no
titles_visibility = no

progressbar_look = "───"

# group media lib by album artist tag
media_library_primary_tag = album_artist
# show media lib album release dates
media_library_albums_split_by_date = yes

startup_screen = playlist
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock,
## lyrics, last_fm.

# on tab switch between these
screen_switcher_mode = playlist, media_library

user_interface = alternative
## Available values: classic, alternative.

## music visualizer
#
# To enable the visualizer put this block into ~/.config/mpd/mpd.conf:
# audio_output {
#   type   "fifo"
#   name   "Visualizer feed"
#   path   "/tmp/mpd.fifo"
#   format "44100:16:2"
# }
visualizer_fifo_path = /tmp/mpd.fifo

# if you set format to 44100:16:2, make it 'yes'
visualizer_in_stereo = yes

visualizer_sync_interval = 30

# available values: spectrum, wave, wave_filled, ellipse
visualizer_type = spectrum
visualizer_look = "▪▪"

# duplicating every color but the first, makes the middle block for spectrum smaller
visualizer_color = blue, cyan, cyan, green, green, yellow, yellow, magenta, magenta, red, red

playlist_disable_highlight_delay = 0
message_delay_time = 1

##### song format #####
##
## For a song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed only when
## certain tags are present, you can archieve it by grouping them with brackets,
## e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
## present or '' otherwise.  It is also possible to define a list of
## alternatives by providing several groups and separating them with '|',
## e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
## not present.
##
## Note: If you want to set limit on maximal length of a tag, just put the
## appropriate number between % and character that defines tag type, e.g. to
## make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.  They are
## followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it again,
## but this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename with
## reversed colors.
##
## If you want to use 256 colors and/or background colors in formats (the naming
## scheme is described below in section about color definitions), it can be done
## with the syntax $(COLOR), e.g. to set the artist tag to one of the
## non-standard colors and make it have yellow background, you need to write
## $(197_yellow)%a$(end). Note that for standard colors this is interchangable
## with attributes listed above.
##
## Note: colors can be nested.

song_list_format = {$4%a - }{%t}|{$8%f$9}$R{$3(%l)$9}

song_status_format = $b{{{$8%t}|{$8%f}} $3by $4%a{ $3in $7%b} $3}|{$8%f}

song_library_format = {%n - }{%t}|{%f}

# this is active
alternative_header_first_line_format = $b$1$aqqu$/a$(yellow) {%t}|{%f} $1$atqq$/a$9$/b
alternative_header_second_line_format = {{$(white)$b%a$/b}{ - ($(blue)%b$9)}}|{%D}

current_item_prefix = $(yellow)$r$b
current_item_suffix = $/r$(end)$/b

current_item_inactive_column_prefix = $(blue)$r
current_item_inactive_column_suffix = $/r$(end)

now_playing_prefix = $(yellow)$b
now_playing_suffix = $(end)$/b

#browser_playlist_prefix = "$2playlist$9 "
#selected_item_prefix = $6
#selected_item_suffix = $9
#modified_item_prefix = $3> $9
#song_window_title_format = {%a - }{%t}|{%f}

## Note: Below variables are used for sorting songs in browser.  The sort mode
## determines how songs are sorted, and can be used in combination with a sort
## format to specify a custom sorting format.  Available values for
## browser_sort_mode are "name", "mtime", "format" and "noop".
##
#
#browser_sort_mode = name
#
#browser_sort_format = {%a - }{%t}|{%f} {(%l)}

##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to have fixed size, add
## 'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
## screen (so the real width will depend on actual screen size), whereas
## (10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
## is.
##
## - color is optional (if you want the default one, leave the field empty).
##   leave empty to set via 'now_playing_prefix'
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes, separated with
##   character ':', e.g. {lr:Length} gives you right aligned column of lengths
##   named "Length".
##
## - define sequence of tags, that have to be displayed in case predecessor is
##   empty in a way similar to the one in classic song format, i.e. using '|'
##   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
##   display artist tag and then composer and performer if previous ones are not
##   available.
##
song_columns_list_format = (25)[]{aE} (55)[]{t|f:Title} (17)[blue]{bE} (6)[magenta]{lr}

### customize playlist screen
playlist_show_mpd_host = yes
playlist_show_remaining_time = yes
# horizontal line between albums
playlist_separate_albums = yes
playlist_shorten_total_times = yes

# use columns title display mode over 'classic' everywhere
playlist_display_mode = columns
browser_display_mode = columns
search_engine_display_mode = columns
playlist_editor_display_mode = columns

# center cursor
autocenter_mode = yes
centered_cursor = yes

#discard_colors_if_item_is_selected = yes
#show_duplicate_tags = true
#incremental_seeking = yes
#seek_time = 1
#volume_change_step = 2

## lyrics
lyrics_directory = ~/.cache/lyrics
follow_now_playing_lyrics = yes
fetch_lyrics_for_current_song_in_background = no
store_lyrics_in_song_dir = no
lyrics_fetchers = lyricwiki, azlyrics, genius, sing365, lyricsmania, metrolyrics, justsomelyrics, jahlyrics, plyrics, tekstowo, internet

#space_add_mode = add_remove
#
## Note: You can define startup slave screen by choosing screen from the list
## above or an empty value for no slave screen.
##
#ask_for_locked_screen_width_part = yes
#
#jump_to_now_playing_song_at_start = yes

ask_before_clearing_playlists = yes

display_volume_level = yes
display_remaining_time = yes

## Available values: none, basic, extended, perl.
##
#regular_expressions = perl
#
##
## Note: if below is enabled, ncmpcpp will ignore leading "The" word while
## sorting items in browser, tags in media library, etc.

ignore_leading_the = yes

## Note: if below is enabled, ncmpcpp will ignore diacritics while searching and
## filtering lists. This takes an effect only if boost was compiled with ICU
## support.
ignore_diacritics = yes

#block_search_constraints_change_if_items_found = yes
#
empty_tag_marker = " "
#tags_separator = " | "
#tag_editor_extended_numeration = no
#media_library_sort_by_mtime = no
search_engine_default_search_mode = 1

external_editor = vim
use_console_editor = yes

##### colors definitions #####
## Define color as using presets or 256 codes
##
## It is possible to set a background color by setting a color value
## "<foreground>_<background>", e.g. red_black will set foregound color to red
## and background color to black.
##
## There are two special values for the background color: "transparent" and "current".

volume_color = blue
header_window_color = blue
state_line_color = blue
state_flags_color = yellow

main_window_color = 252
window_border_color = blue
active_window_border = blue
alternative_ui_separator_color = blue

progressbar_color = black
progressbar_elapsed_color = blue:b
statusbar_color = yellow
player_state_color = blue
statusbar_time_color = yellow

empty_tag_color = magenta

## disable gui
mouse_support = no
mouse_list_scroll_whole_page = no
lines_scrolled = 1

