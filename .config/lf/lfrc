# lf file manager config
## docs: lf -doc L
## example: https://raw.githubusercontent.com/BrodieRobertson/dotfiles/master/config/lf/lfrc

# from https://github.com/thimc/lfimg
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner
# set previewer ~/scripts/lf-preview
set nodirfirst
set relativenumber
set ratios 5:4
set hiddenfiles ".*:*.aux:*.log:*.synctex.gz:*.bcf:*.run.xml:*.bbl:*.blg:*.toc:*.nav:*.out:*.snm:package-lock.json:node_modules:prog3" # ignore
set cursorpreviewfmt "\033[48;5;240m"

# for working with $fs/$fx
set shell zsh
set shellopts '-eu:--shwordsplit'
set ifs "\n"
set filesep "\n"

## custom functions
cmd open ${{
  ~/scripts/mime/mime -e lf open "$f"
}}
cmd openAndSwitch ${{
  ~/scripts/mime/mime -e lf open "$f"
  tmux next-window
}}
cmd diropen ${{
  ~/.config/lf/scripts/handle-dir "$f"
}}
cmd diropenShuffle ${{
  ~/.config/lf/scripts/handle-dir "$f" -s
}}

cmd remove ${{
  rm -rf $fx
}}

cmd edit ${{
  ~/scripts/mime/mime -e lf edit "$f"
}}

cmd massmove ${{
  qmv -f do -d $fx

  # if spaces in name, qmv spawns annoying empty dirs
  findex . -type d 'rmdir "$1"' >/dev/null 2>/dev/null &
}}

cmd move-to-inbox %printf "Moved '${f##*/}' to inbox"; mv "$f" $ORG_INBOX/

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot -f --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  /bin/lf -remote "send $id cd '$res'"
}}

cmd gimp ${{
  gimp "$f" >/dev/null 2>&1 &
}}

cmd rm_pi ${{
  # remove a file from the local music lib and the pi's
  REMOTE_FILE=""
  if realpath $f | grep 'unheard'; then
    FILE="$(realpath $f | grep -Po '/unheard/\K.*$')"
    REMOTE_FILE="\$HOME/usb/unheard/$FILE"
  else
    FILE="$(realpath $f | grep -Po '/music/\K.*$')"
    REMOTE_FILE="\$HOME/usb/music/$FILE"
  fi

  echo "Removing file: '$FILE' at\n  '$REMOTE_FILE'\nContinue (y/N): "
  read ans
  if [ "$ans" != "y" ]; then
    exit 0
  fi

  ssh pi "rm -r \"$REMOTE_FILE\""
  rm -r "$f"
}}

cmd paste_and_forget %{{
  lf -remote 'send paste'
  lf -remote 'send clear'
}}

cmd clear-unselect %{{
  lf -remote 'send clear'
  lf -remote 'send unselect'
}}

cmd fzf_dir ${{
  pick() {
    FZF_DEFAULT_COMMAND="find ~/org -type d | cut -d/ -f4-" fzf --bind TAB:up,Shift-TAB:down --height=0
  }
  lf -remote "send $id select '$HOME/$(pick)'"
}}
cmd fzf_file ${{
  pick() {
    FZF_DEFAULT_COMMAND="rg --ignore --hidden --files --type-add='exclude:*.{mp3,png,jpg,JPG,jpeg,pdf,mkv,mp4,avi,zip,ods,xlsx,m3u,url,aac,mpc,epub,sql,ydb}' --type-not=exclude --glob='!.git/' --glob '!git/' --glob '!node_modules/' --glob '!.cache' --glob '!vendor/' --glob '!teams-for-linux/' --glob '!.local/lib' --glob '!.local/share/*/' --glob '!BraveSoftware/' --glob '!chromium' --glob '!chrome/' --glob '!firefox/' --glob '!Signal' --glob '!.ib-tws/' --glob '!.java/' --glob '!.zcompcache' --glob '!tmp/' --glob='!ct/manga' --glob='!ct/comics' --glob='!dotfiles/' -g='!coverage' -g='!dist/' -g='!build/' -g='!.gradle/' ~/org | cut -d/ -f4-" fzf --bind TAB:up,Shift-TAB:down --height=0
  }
  lf -remote "send $id select '$HOME/$(pick)'"
}}

## create files
cmd touch %printf "File Name: "; read ans; touch "$ans"
cmd touchTex %{{
  printf "Tex Name: "
  read ans
  vtex "$ans"
}}
cmd create-index ${{
  touch index.norg
  $EDITOR index.norg
}}
cmd gen-note ${{
  ~/scripts/gen-note
}}
cmd create-norg ${{
  printf "Name of .norg file: "
  read ans
  local file="${ans}.norg"
  touch "$file"
  $EDITOR "$file"
}}
cmd mkdir %{{
  printf "Directory name: "
  read ans
  mkdir "$ans"

  lf -remote "send select '$ans'"
  lf -remote "send open"
}}
cmd create-project ${{
  printf "Project dir name: "
  read ans
  local project="$ORG_PROJECTS/$ans"
  mkdir "$project"
  cd "$project"

  lf -remote "send select '$project'"
  lf -remote "send open"

  touch "$project/index.norg"
  $EDITOR "$project/index.norg"
}}
cmd create-design ${{
  printf "Design dir name: "
  read ans
  local design="$ORG_DESIGN/$ans"
  mkdir "$design"
  cd "$design"

  lf -remote "send select '$design'"
  lf -remote "send open"

  touch "$design/index.norg"
  $EDITOR "$design/index.norg"
}}
cmd create-area ${{
  printf "Area dir name: "
  read ans
  local area="$ORG_AREAS/$ans"
  mkdir "$area"
  cd "$area"

  lf -remote "send select '$area'"
  lf -remote "send open"

  touch "$area/index.norg"
  $EDITOR "$area/index.norg"
}}
### create files
map t touch
map T touchTex
map NN gen-note
map ci create-index
map cn create-norg
map cp create-project
map cd create-design
map ca create-area

## bindings
### remove defaults
map m
map d
map e
map r
map p
map c
map u
map N # jump to prev result

### own bindings
map e edit
map u clear-unselect
map rm remove $f
map rp rm_pi
map x cut
map p paste_and_forget
map <esc> clear
map m massmove
map d mkdir
map D diropen
map Y diropenShuffle
map L openAndSwitch
# map f broot_jump
map . set hidden!
map R reload
map I gimp # [I]mage
map b move-to-inbox # in[B]ox
map <a-d> fzf_dir
map <a-f> fzf_file

### jump - cd to dirs

map go  %lf -remote "send $id cd $ORG"
map gi  %lf -remote "send $id cd $ORG_INBOX"
map gd  %lf -remote "send $id cd $ORG_DESIGN"
map gp  %lf -remote "send $id cd $ORG_PROJECTS"
map ga  %lf -remote "send $id cd $ORG_AREAS"
map gr  %lf -remote "send $id cd $ORG_RESOURCES"
map gmm %lf -remote "send $id cd $ORG_MEDIA"
map gb  %lf -remote "send $id cd $ORG_MEDIA/books"
map gmo %lf -remote "send $id cd $ORG_MEDIA/movies"
map gM  %lf -remote "send $id cd $ORG_MEDIA/music"
map gA  %lf -remote "send $id cd $ORG_ARCHIVE"

map gD cd ~/Downloads
# map gu cd ~/projects/uni
# map gG cd ~/projects/geldhochschule
# map gt cd ~/projects/geldhochschule/1_Trades
map gc cd ~/code
# map gc cd ~/ct
# map gC cd ~/ct/podcasts
# map gP cd ~/ct/pictures
map gB cd ~/code/notes/books
map gn cd ~/code/notes
map gR cd ~/code/notes/research
# map gs cd ~/projects/spanish
# map gl cd ~/projects/latin
# map ge cd ~/projects/morning_routine/meditation

map o jump-prev
map i jump-next
