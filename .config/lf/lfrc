# lf file manager config
## docs: lf -doc L
## example: https://raw.githubusercontent.com/BrodieRobertson/dotfiles/master/config/lf/lfrc

# from https://github.com/thimc/lfimg
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner
# set previewer ~/scripts/lf-preview
set nodirfirst
set relativenumber
set ratios 5:4
# ignore
set hiddenfiles ".*:*.aux:*.log:*.synctex.gz:*.bcf:*.run.xml:*.bbl:*.blg:*.toc:*.nav:*.out:*.snm:package-lock.json:node_modules"
set cursorpreviewfmt "\033[48;5;240m"
set statfmt "\033[36m%p\033[0m| (%s)| %t| -> %l" # size in GB (not GiB)

# for working with $fs/$fx
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"

# Different commands:
# $ -> shell
# % -> shell-pipe: input from the ui and output to the ui
# ! -> shell-wait: wait for input after running
# & -> shell-async: run in the background

cmd source-config %lf -remote "send $id source ~/.config/lf/lfrc"

cmd open $~/scripts/mime/mime -e lf open "$f"
cmd edit $~/scripts/mime/mime -e lf edit "$f"
cmd remove $rm -rf $fx

cmd diropen $~/.config/lf/scripts/handle-dir "$f"
cmd diropenShuffle $~/.config/lf/scripts/handle-dir "$f" -s

cmd massmove $~/.config/lf/scripts/rename "$fx"
cmd combine $~/.config/lf/scripts/combine $fx

cmd paste_and_forget &lf -remote "send $id :paste; clear; refresh"
cmd clear-unselect &lf -remote "send $id :clear; unselect"

cmd move-to-inbox %{{
  local filename="${f##*/}"
  if [ -e "$ORG_INBOX/$filename" ]; then
    mv "$f" "$ORG_INBOX/$(date +%s)-$filename"
  else
    mv "$f" $ORG_INBOX/
  fi
  printf "Moved '${f##*/}' to inbox"
}}
cmd move-to-archive %{{
  local filename="${f##*/}"
  if [ -e "$ORG_ARCHIVE/$filename" ]; then
    mv "$f" "$ORG_ARCHIVE/$(date +%s)-$filename"
  else
    mv "$f" $ORG_ARCHIVE/
  fi
  printf "Moved '${f##*/}' to archive"
}}
cmd move-to-local-archive %{{
  local filename="${f##*/}"
  mkdir -p .archive
  if [ -e ".archive/$filename" ]; then
    mv "$f" ".archive/$(date +%s)-$filename"
  else
    mv "$f" .archive/
  fi
  printf "Moved '${f##*/}' to archive"
}}
cmd move-to-paperless %{{
  local filename="${f##*/}"
  mv "$f" $ORG/.paperless_import/
  printf "Moved '${f##*/}' to paperless"
}}
cmd move-to-blog-post-ideas %{{
  local filename="${f##*/}"
  mv "$f" "$ORG_AREAS/blog/posts/0 rough ideas/"
  printf "Moved '${f##*/}' to blog post ideas"
}}

cmd gimp &gimp "$f" >/dev/null 2>&1

cmd fzf_dir $~/.config/lf/scripts/fzf-open dir
cmd fzf_file $~/.config/lf/scripts/fzf-open file

## create files
cmd gen-note $~/scripts/gen-note
cmd touch %{{
  printf "File Name: "
  read ans
  if echo $ans | grep -Fv . >/dev/null; then
    ans="$ans.norg"
  fi
  touch "$ans"
  lf -remote "send $id select '$ans'"
  lf -remote "send $id edit"
}}
cmd touchTex %{{
  printf "Tex Name: "
  read ans
  vtex "$ans"
}}
cmd create-index ${{
  touch index.norg
  $EDITOR index.norg
}}
cmd create-norg ${{
  printf "Name of .norg file: "
  read ans
  local file="${ans}.norg"
  touch "$file"
  $EDITOR "$file"
}}
cmd mkdir %{{
  printf "Directory name: "
  read ans
  mkdir -p "$ans"
  lf -remote "send $id cd '$ans'" # curiously only works if no spaces in name
}}
cmd create-project ${{
  printf "Project dir name: "
  read ans
  local project="$ORG_PROJECTS/$ans"

  mkdir -p "$project"
  lf -remote "send $id :cd '$project'; reload" &
  plan "$project/index.norg"
}}
cmd create-design ${{
  printf "Design dir name: "
  read ans
  local design="$ORG_DESIGN/$ans"

  mkdir -p "$design"
  lf -remote "send $id :cd '$design'; reload" &
  plan "$project/index.norg"
}}
cmd create-area ${{
  printf "Area dir name: "
  read ans
  local area="$ORG_AREAS/$ans"

  mkdir -p "$area"
  touch "$area/index.norg"
  lf -remote "send $id :cd '$area'; reload" &
}}
cmd create-resource ${{
  printf "Resource name: "
  read ans
  local resource="$ORG_RESOURCES/$ans"

  mkdir -p "$resource"
  lf -remote "send $id cd '$resource'" &
}}

cmd on-cd &{{
  case "$PWD" in
    "$ORG_AREAS/mental models"|"$ORG_AREAS/blog/posts"|"$ORG_RESOURCES/power dynamics/"*)
      lf -remote "send $id :set sortby natural; set noreverse";;
    $ORG_RESOURCES/* | $ORG_INBOX)
      lf -remote "send $id :set sortby time; set reverse";;
    $ORG_PROJECTS/* | $ORG_AREAS/*)
      lf -remote "send $id :set sortby time; set reverse"
      manage-task-view-pane "$PWD" &
      ;;
    *)
      lf -remote "send $id :set sortby natural; set noreverse";;
  esac
  # recreatable minus the globs with: https://github.com/gokcehan/lf/pull/1381
}}
on-cd # run on startup

cmd show-tasks %tmux split-window -v -l 30%; tmux select-pane -T 'task-view'; tmux send-keys "clear && t" "Enter"

## bindings
### remove defaults
map m
map d
map e
map r
map p
map c
map u
map N # jump to prev result

### create files
map t touch
map T touchTex
map NN gen-note
map ci create-index
map cn create-norg
map ct create-norg
map cp create-project
map cd create-design
map ca create-area
map cr create-resource

### own bindings
map cb combine
map e edit
map u clear-unselect
map rm remove $f
map rp rm_pi
map x cut
map p paste_and_forget
map <esc> clear
map d mkdir
map D diropen
map Y diropenShuffle
map S source-config
map . set hidden!
map R reload
map I gimp # [I]mage
map L show-tasks
### fzf open
map <a-d> fzf_dir
map <a-f> fzf_file
### move files
map mm massmove
map mi move-to-inbox
map mA move-to-archive
map ma move-to-local-archive
map ml move-to-local-archive
map mp move-to-paperless
map mb move-to-blog-post-ideas

### jump - cd to dirs
map go  %lf -remote "send $id cd $ORG"
map gi  %lf -remote "send $id cd $ORG_INBOX"
map gd  %lf -remote "send $id cd $ORG_DESIGN"
map gp  %lf -remote "send $id cd $ORG_PROJECTS"
map ga  %lf -remote "send $id cd $ORG_AREAS"
map gf  %lf -remote "send $id cd $ORG_AREAS/Freunde"
map ge  %lf -remote "send $id cd $ORG_AREAS/geld"
map gR  %lf -remote "send $id cd $ORG_AREAS/routine"
map gs  %lf -remote "send $id cd $ORG_AREAS/assets"
map gI  %lf -remote "send $id cd $ORG_AREAS/assets/Aktien/Investieren"
map gt  %lf -remote "send $id cd $ORG_AREAS/assets/Aktien/Trading"
map gG  %lf -remote "send $id cd $ORG_AREAS/personal\ development/gamechanger"
map gP  %lf -remote "send $id cd $ORG_AREAS/blog/posts"
map gl  %lf -remote "send $id cd $ORG_GOALS"
map gr  %lf -remote "send $id cd $ORG_RESOURCES"
map gb  %lf -remote "send $id cd $ORG_RESOURCES/media/books"
map gmm %lf -remote "send $id cd $ORG_MEDIA"
map gM  %lf -remote "send $id cd $ORG_MEDIA/music"
map gA  %lf -remote "send $id cd $ORG_ARCHIVE"
map gD                        cd ~/Downloads
map gc                        cd ~/code
map gv                        cd .archive

map o jump-prev
map i jump-next
